
--Anti Knife--
local anti_media = ui.new_checkbox("AA", "Other", "Anti-knife")


local event_handler_functions = {
    [true]  = client.set_event_callback,
    [false] = client.unset_event_callback,
}

local function get_distance(x1, y1, z1, x2, y2, z2)
    return math.sqrt((x2 - x1)^2 + (y2 - y1)^2 + (z2 - z1)^2)
end

local function on_run_command()
    local players = entity.get_players(true)
    local lx, ly, lz = entity.get_prop(entity.get_local_player(), "m_vecOrigin")
	local yaw, yaw_slider = ui.reference("AA", "Anti-aimbot angles", "Yaw")
    for i=1, #players do
        local x, y, z = entity.get_prop(players[i], "m_vecOrigin")
        local distance = get_distance(lx, ly, lz, x, y, z)
        local weapon = entity.get_player_weapon(players[i])
        if entity.get_classname(weapon) == "CKnife" and distance <= 164 then
            ui.set(yaw_slider,180)
        end
    end
end

local function on_script_toggle_change()
    local state = ui.get(anti_media)
    local handle_event = event_handler_functions[state]
    handle_event("run_command", on_run_command)
end

on_script_toggle_change()
ui.set_callback(anti_media, on_script_toggle_change)
--Keybinds Info--

client.delay_call(1,function()client.color_log(255,137,65,"GOOD LUCK & HAVE FUN")end)
client.delay_call(1,function()client.color_log(30,144,255,"Thank you for using [MonBii Gamesense Config]")end)
client.delay_call(1,function()client.color_log(238,130,238,"Keybind list:")end)
client.delay_call(1,function()client.color_log(238,130,238,"M5:Doubletap [Toggle]")end)
client.delay_call(1,function()client.color_log(238,130,238,"M4:Auto peek & Freestanding [Hold]")end)
client.delay_call(1,function()client.color_log(238,130,238,"M3:Third person [Toggle]")end)
client.delay_call(1,function()client.color_log(238,130,238,"R:Edge jump [Hold]")end)
client.delay_call(1,function()client.color_log(238,130,238,"V:Damage override [Toggle]")end)
client.delay_call(1,function()client.color_log(238,130,238,"Z/C:Turn Left/Right [Toggle]")end)
client.delay_call(1,function()client.color_log(238,130,238,"F:Helper [Hold]")end)
client.delay_call(1,function()client.color_log(238,130,238,"T:Force body aim[Toggle]")end)
client.delay_call(1,function()client.color_log(238,130,238,"X:Hide shot [Toggle]")end)
client.delay_call(1,function()client.color_log(238,130,238,"Alt:Fake duck [Toggle]")end)
client.delay_call(1,function()client.color_log(238,130,238,"Shift:Slow walk [Hold]")end)


--Auto Buy--

local globals_realtime = globals.realtime
local globals_curtime = globals.curtime
local globals_maxplayers = globals.maxplayers
local globals_tickcount = globals.tickcount
local globals_tickinterval = globals.tickinterval
local globals_mapname = globals.mapname

local client_set_event_callback = client.set_event_callback
local client_console_log = client.log
local client_console_cmd = client.exec
local client_userid_to_entindex = client.userid_to_entindex
local client_get_cvar = client.get_cvar
local client_draw_debug_text = client.draw_debug_text
local client_draw_hitboxes = client.draw_hitboxes
local client_random_int = client.random_int
local client_random_float = client.random_float
local client_draw_text = client.draw_text
local client_draw_rectangle = client.draw_rectangle
local client_draw_line = client.draw_line
local client_world_to_screen = client.world_to_screen
local client_delay_call = client.delay_call
local client_visible = client.visible

local ui_new_checkbox = ui.new_checkbox
local ui_new_slider = ui.new_slider
local ui_new_button = ui.new_button
local ui_new_combobox = ui.new_combobox
local ui_new_multiselect = ui.new_multiselect
local ui_new_hotkey = ui.new_hotkey
local ui_set = ui.set
local ui_get = ui.get
local ui_set_visible = ui.set_visible

local entity_get_local_player = entity.get_local_player
local entity_get_all = entity.get_all
local entity_get_players = entity.get_players
local entity_get_classname = entity.get_classname
local entity_set_prop = entity.set_prop
local entity_get_prop = entity.get_prop
local entity_is_enemy = entity.is_enemy
local entity_get_player_name = entity.get_player_name
local entity_get_player_weapon = entity.get_player_weapon

local table_concat = table.concat
local table_insert = table.insert
local to_number = tonumber
local math_floor = math.floor
local table_remove = table.remove
local string_format = string.format

local delay = 0.03

local primary_weapons = {
	{name='-', command=""},
	{name='AWP', command="buy awp; "},
	{name='Auto-Sniper', command="buy scar20; buy g3sg1; "},
	{name='Scout', command="buy ssg08; "},
	{name='Negev', command="buy negev; "}
}

local secondary_weapons = {
	{name='-', command=""},
	{name='R8 Revolver / Deagle', command="buy deagle; "},
	{name='Dual Berettas', command="buy elite; "},
	{name='FN57 / Tec9 / CZ75-Auto', command="buy fn57; "}
}

local gear_weapons = {
	{name='Kevlar', command="buy vest; "},
	{name='Helmet', command="buy vesthelm; "},
	{name='Defuse Kit', command="buy defuser; "},
	{name='Grenade', command="buy hegrenade; "},
	{name='Molotov', command="buy incgrenade; "},
	{name='Smoke', command="buy smokegrenade; "},
	{name='Flashbang (x2)', command="buy flashbang; "},
	{name='Taser', command="buy taser; "},
}

local function get_names(table)
	local names = {}
	for i=1, #table do
		table_insert(names, table[i]["name"])
	end
	return names
end

local function get_command(table, name)
	for i=1, #table do
		if table[i]["name"] == name then
			return table[i]["command"]
		end
	end
end

local buybot_enabled = ui_new_checkbox("MISC", "Miscellaneous", "Auto-Buy")
local buybot_primary = ui_new_combobox("MISC", "Miscellaneous", "Auto-Buy: Primary", get_names(primary_weapons))
local buybot_pistol = ui_new_combobox("MISC", "Miscellaneous", "Auto-Buy: Secondary", get_names(secondary_weapons))
local buybot_gear = ui_new_multiselect("MISC", "Miscellaneous", "Auto-Buy: Gear", get_names(gear_weapons))

local function on_enabled_change()
	local enabled = ui_get(buybot_enabled)
	ui_set_visible(buybot_primary, enabled)
	ui_set_visible(buybot_pistol, enabled)
	ui_set_visible(buybot_gear, enabled)
end
on_enabled_change()
ui.set_callback(buybot_enabled, on_enabled_change)

local function run_buybot(e)
	local userid = e.userid
	if userid ~= nil then
		if client_userid_to_entindex(userid) ~= entity_get_local_player() then
			return
		end
	end

	if not ui_get(buybot_enabled) then
		return
	end

	local primary = ui_get(buybot_primary)
	local pistol = ui_get(buybot_pistol)
	local gear = ui_get(buybot_gear)

	local commands = {}

	table_insert(commands, get_command(primary_weapons, primary))
	table_insert(commands, get_command(secondary_weapons, pistol))
	
	for i=1, #gear do
		table_insert(commands, get_command(gear_weapons, gear[i]))
	end

	table_insert(commands, "use weapon_knife;")

	local command = table_concat(commands, "")
	client_console_cmd(command)


end

client_set_event_callback("player_spawn", run_buybot)


--Dmg Ind--

local client_size = client.screen_size
local client_draw = client.draw_text
local client_draw_indicator = client.draw_indicator
local client_set_event_callback = client.set_event_callback

local ui_get = ui.get
local ui_set = ui.set
local ui_reference = ui.reference
local ui_new_hotkey = ui.new_hotkey
local ui_new_slider = ui.new_slider

local entity_get_local_player = entity.get_local_player
local entity_get_prop = entity.get_prop

local mindmg = ui_reference("rage", "aimbot", "minimum damage")




local last_value = 0
local should = false
local dmg_type = 0
local once = false

local function on_paint(c)

	if last_value ~= ui_get(mindmg) and not should then
		last_value = ui_get(mindmg)
	end
	
	if entity_get_prop(entity_get_local_player(), "m_lifeState") ~= 0 then
		should = false
		ui_set(mindmg,  last_value)
        return
    end
	
	
	local sw, sh = client_size()
	local x, y = sw / 2, sh - 200



	


	client.draw_text(ctx, sw / 2+18, sh / 2-15, 255,255,255, 255, "c", 0, ui_get(mindmg))	

end

client_set_event_callback('paint', on_paint)



--Slowwalk

local client_draw_circle, client_color_log, client_delay_call, client_draw_text, client_visible, client_exec, client_trace_line, client_set_cvar, client_world_to_screen = client.draw_circle, client.color_log, client.delay_call, client.draw_text, client.visible, client.exec, client.trace_line, client.set_cvar, client.world_to_screen 

--end of local variables


local chkbox_slowwalk = ui_new_checkbox("AA", "Other", "Slow walk")
local hotkey_slowwalk = ui_new_hotkey("AA", "Other", "Slow walk hotkey")
local slider_slowwalk = ui_new_slider("AA", "Other", "Slow walk speed", 1, 100, 100, true, "%") --ui.new_slider(tab, container, name, min, max, init_value, show_tooltip, unit, scale, tooltips)

local function setSpeed(newSpeed)
	if client_get_cvar("cl_sidespeed") == 450 and newSpeed == 450 then
		return
	end

    client_set_cvar("cl_sidespeed", newSpeed)
    client_set_cvar("cl_forwardspeed", newSpeed)
    client_set_cvar("cl_backspeed", newSpeed)
end

client_set_event_callback("run_command", function()
	if not ui_get(chkbox_slowwalk) then 
		return 
	end

	if not ui_get(hotkey_slowwalk) then
		setSpeed(450)
	else
		local final_val = 250 * ui_get(slider_slowwalk) / 100
		setSpeed(final_val)
	end
end)

-- third person fov 

local set = ui.set
local get = ui.get
local visible = ui.set_visible

local enabled = ui.new_checkbox("MISC", "Miscellaneous", "Override third person FOV")
local oldfov = ui.new_slider("MISC", "Miscellaneous", "First person FOV", 1, 135, 90, true)
local newfov = ui.new_slider("MISC", "Miscellaneous", "Third person FOV", 1, 135, 90, true)
local fov = ui.reference("MISC", "Miscellaneous", "Override FOV")
local tp, tp_hotkey = ui.reference("VISUALS", "Effects", "Force third person (alive)")

set(oldfov, get(fov))
set(newfov, get(fov))

client.set_event_callback( "setup_command", function( cmd )	

	if get(enabled) == true then
		visible(oldfov, true)
		visible(newfov, true)
	else
		visible(oldfov, false)
		visible(newfov, false)
	end

	if (get(tp) and get(tp_hotkey)) then
		set(fov, get(newfov))
	else
		set(fov, get(oldfov))
	end

end)

